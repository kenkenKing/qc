The genetic programming and the genetic algorithm have many applications in a wide variety of fields. However, their usage in financial markets is still mostly uncovered. Genetic algorithm (GA) is a prominent algorithm in the family of nature-inspired optimization methods. The approach of GA can be directly compared to Darwinism. GA represents the possible solutions to the problem through a population, which evolves across generations. The fittest individuals evolve and produce offsprings that are even more fit. Stochastic optimization techniques are a perfect fit for non-linear problems, and situations where the objective function’s derivation does not exist.
The novel research utilizes the GA to find an optimal function that takes various stock characteristics as input and outputs the expected return in the following month. The function in question can be composed of multiple linear and non-linear functions, and the algorithm aims to find the optimal combination of both characteristics and “simple” functions to maximize the Sharpe ratio of the spread portfolio which goes long the stocks in the top decile of the expected return and short the bottom decile of the expected return.
Overall, the strategy might seem complex to execute and probably requires previous knowledge of Genetic algorithms. However, according to the results, the GA can outperform popular ML methods such as Lasso, Ridge Regressions, PLS, PCA regression and even Neural nets. Therefore, the initial complexity seems to be justified, providing a superior performance compared to other methods.

Fundamental reason
The reasons for the strategy´s functionality are similar to those of the machine learning models. The strategy is built on a suitable dataset of stocks characteristics and can utilize them to predict subsequent returns with an accuracy high enough to provide abnormal returns. Additionally, the genetic algorithm is exceptionally well suited for the problems which are non-linear or for the optimization of objective functions that are not differentiable. In this case, the algorithm probably outperforms other methods because it can identify both the variables that should be used and also the functional form of their combination.
Moreover, genetic programming usage and the resulting function are vastly profitable in other international markets, even if they were omitted entirely in the training process. Also, the use of fundamental data instead of technical indicators yields similar results. Lastly, a different objective function that aims to minimize the MSE instead of the Sharpe´s ratio maximization also does not alter the results.

Simple trading strategy
The investment universe consists of common stocks with share codes of 10 and 11 listed on NYSE, AMEX and NASDAQ. Stocks with price below 5$ are excluded. The set of characteristics includes following variables: short-term reversal (past one month return), the momentum of Jegadeesh and Titman (the most recent month is skipped), and long-term reversal of DeBondt and Thaler and eleven moving averages of price signals with lags of 3-, 5-, 10-, 20-, 50-, 100-, 200-, 400-, 600-,
800-, and 1000-days. For every optimization problem, the first step is to establish the optimization method and objective function. The technique used is the Genetic algorithm. The algorithm’s goal is to find a function G using a training dataset that maximizes the Sharpe ratio of the decile long-short portfolio (equation 1).
To be more precise, the G is the function that maps the stock characteristics to the expected return in the following month. Therefore, the objective is to find the function which takes characteristics as inputs and outputs the expected return (equation 2). Stocks are sorted based on the expected return into deciles, and the spread portfolio is the value-weighted portfolio that goes long the top decile and shorts the bottom decile.
The function G can be composed of the following functions: ADDITION, SUBTRACTION, NEGATIVE, MULTIPLY, DIVIDE, SIN, COS, ABS, and CMP. The building process of the function can be represented by a tree structure (the Appendix offers a visual representation), and the authors limit the tree depth to 30.
The first step of the genetic algorithm consists of initiating a random population as the first generation. Secondly, several individuals are randomly chosen to be parents, where the selection favours more fitted (high Sharpe ratio) individuals (similar to the simulated annealing and other stochastic optimization methods). The parents are combined using crossover and mutation to create new offsprings. The process is repeated until the algorithm is stopped. Consistent with other papers, the algorithm is run more than once (5 in this paper) to reduce the risk of jumping into local optima. Subsequently, the results are averaged across each run.
Finally, the size of the population and the number of generations is found using a validation set. However, the number would largely depend on the individual investment universe – since the size and number of generations influence the searching depth. As a rule of thumb, the bigger the size, the better the solution would be; however, this can be significantly time inefficient, and it could require considerable computing power.
The strategy is value-weighted, rebalanced monthly, and results are provided for the out-of-sample testing dataset. The paper splits data into training, validation and testing sets.

Hedge for stocks during bear markets
Partially - The strategy is only slightly correlated with Mkt factor (table 5, panel B)