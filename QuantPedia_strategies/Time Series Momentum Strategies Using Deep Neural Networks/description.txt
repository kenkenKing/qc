Traditionally, time-series momentum strategies used some fixed training rules, where the most important rules are trend estimation and position sizing. For example, the traditional approach uses the past one year return as a trend estimator. It sizes position by a simple rule, if the return is positive, a long position is taken, and if the return is negative, a short position is taken. With more modern methods, there are possibilities for how to find more optimal trading rules with a machine learning approach. This paper examines various machine learning methods with various loss functions. However, we would centre our attention around Long short-term memory (LSTM) neural network. The reason is simple, the paper has proved that more complex models are not necessarily better, and LSTM performs the best among all machine learning methods. The idea of the strategy is to train a recurrent neural network, to be more precise LSTM, to find the best trend estimation and position sizing at the same time, optimising the Sharpe ratio of various futures contracts. The advantage of recurrent artificial neural networks is the usage of past data.
Moreover, authors use a hybrid approach which injects deep learning-based trading rules into the volatility scaling framework of time-series momentum. Last but not least, it is important to bear in mind that machine learning models usually leads to trading strategies with frequent rebalancing. Paper has found out that the LSTM model can outperform benchmarks (for example long-only or traditional approach for time series momentum) considering transaction costs up to 2-3 basis points (therefore liquid futures are most suitable). However, there is also a possibility to train the neural network with a model strategy that includes trading costs. Paper has examined extreme transaction costs of 10bps and found out that while the network trained without consideration of transaction costs would lead to negative returns, network trained with costs would significantly outperform benchmarks.

Fundamental reason
Reasons for the functionality of machine learning momentum models are not much different from the traditional momentum ones. The idea is that the assets that have performed well should perform well in the future, and on the other hand, assets that have performed badly are expected to perform badly in the near future. The way to success is in the optimal trend estimation and position sizing. The benefit of employing a machine learning method, in this case, lies in the finding optimal trend estimation and position sizing at the same time. Such approach can result in clear improvements in risk-adjusted performance by calibrating models with the Sharpe ratio; however, the potential investor has to consider transaction costs that can make profitable machine learning strategy unprofitable because of frequent rebalancing. This can be solved by using liquid contracts or even better; the model could be trained with an assumption of trading costs, resulting in significantly higher returns than benchmark strategies.

Simple trading strategy
The investment universe consists of 88 various futures contracts for equities, commodities, FX and fixed income (full list in Appendix A). Firstly, to account for trading costs, consider the returns for time-series momentum by the equation 35 (page 12, with target volatility and volatility scaled returns), instead of using the simple approach given by equation 1. The target volatility is 15% in the paper. The equation includes constant term c that is equal to the trading costs; paper uses 10bp as an extreme case; however, it is constant that can be easily changed. Secondly, machine learning LSTM model is used to generate positions simultaneously learning both trend estimation and position sizing in the same function. This can be done by optimising Sharpe ratio via corresponding loss function (equation 16) – the loss function is simply the sum of returns captured by the trading rule (returns are given by the aforementioned equation 35) for asset i at time t divided by the difference of the sum of squared returns captured by the trading rule and squared sum of returns captured by the trading rule. Loss function sums through the whole parametric set, the set of all M possible prediction and target tuples across all N assets and T time steps (set omega on page 5, under the equation 11). To generate predictions at each step authors use: Normalised Returns – Returns over the past day, 1-month, 3-month, 6-month and 1-year periods, normalised by a measure of daily volatility scaled to an appropriate time scale and MACD Indicators (trend estimators from equation 4), using short time-scale of {8,16,32} and long time-scale of {24,48,96}. Finally, the equations for the LSTM model are on page 7 (equations 28-33). Simply said, LSTM models have hidden state, cell state and forget input and output gates. LSTM uses the cell state as a compact summary of past information, and gates act on the signals they receive, they are used to block or pass on information based on its strength. Therefore, the cells can learn when to allow data to enter, leave or when to delete it. Lastly, calibration was made by stochastic gradient descent. The strategy is rebalanced daily.

Hedge for stocks during bear markets
Yes - Most of the research papers about momentum/trend-following strategies in futures mention negative correlation of this strategy against equity market risk; therefore, the strategy can be used as a hedge/diversification to equity market risk factor during bear markets.