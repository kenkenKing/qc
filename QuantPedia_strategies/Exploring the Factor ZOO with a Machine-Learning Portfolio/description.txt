This paper delves into the world of financial anomalies, exploring the rise and fall of characteristics in what researchers refer to as the “factor zoo.” While significant research effort is devoted to discovering new anomalies, the study highlights the lack of attention given to the evolution of these characteristics over time. By leveraging machine learning (ML) techniques, the paper conducts a comprehensive out-of-sample factor zoo analysis, seeking to uncover the underlying factors driving stock returns. The researchers train ML models on a vast database of firm and trading characteristics, generating a diverse range of linear and non-linear factor structures. The ML portfolio formed based on these findings outperforms entrenched factor models, presenting a novel approach to understanding financial anomalies. Notably, the paper identifies two subsets of dominant characteristics – one related to investor-level arbitrage constraint and the other to firm-level financial constraint – which alternately play a significant role in generating the ML portfolio return. These alternating patterns align with different states of the credit cycle, providing valuable insights into the dynamics of stock returns during credit expansion and contraction. In addition to explaining the source of the ML portfolio’s superior performance, the paper emphasizes the importance of examining the recurrent significance of certain dominant characteristics over a long sample period. The study contributes to the ongoing debate in financial economics and complements recent research on ML portfolios and their potential sources of alpha.

Fundamental reason
The functionality of this paper lies in addressing a critical gap in financial research, where substantial effort is devoted to discovering new anomalies while overlooking the dynamics of existing characteristics in the factor zoo over time. The paper highlights the significance of examining how characteristics evolve and relate to stock returns, shedding light on whether these changes are due to fundamental factors or variations in published articles’ methodologies. To tackle this issue, the researchers conduct a comprehensive out-of-sample factor zoo analysis over a long period without imposing any assumptions on the underlying factor structure. This analysis involves a vast database covering multiple firms and characteristics. Standard econometric tools are limited in handling such a large dataset, making machine learning (ML) techniques crucial to generating a wide range of linear and non-linear factor structures that better capture the complexities of stock returns. The researchers train different ML models to estimate factor structures that maximize stock return forecast accuracy, and these trained ML models are then applied out-of-sample on a test period to generate monthly stock return forecasts. The resulting ML portfolio, comprising predicted winner and loser stocks, consistently outperforms entrenched factor models, showcasing the superiority of ML methods in forecasting stock returns. An essential finding of the paper is that only two small subsets of characteristics, related to investor-level arbitrage constraint and firm-level financial constraint, play an alternating dominant role in generating the ML portfolio return. The paper offers a focused examination to uncover the underlying economics behind this alternating exposure, confirming that the rotational importance of these characteristic subsets aligns with different states of the credit cycle. The fundamental reasons for the functionality of this paper rest in its innovative use of machine learning, rigorous out-of-sample analysis, and exploration of the rise and fall of characteristics in the factor zoo. By uncovering the dynamics behind dominant characteristics and their relation to the credit cycle, the paper contributes valuable insights to the field of finance and provides actionable information for investors and financial professionals.

Simple trading strategy
Algorithm 1 summarises the key steps to construct the ML:
Stage 1: Train and test sample partition
1. Divide 36 years full sample into a train (1980-1998) and a test (1998-2016) sample.
2. Use train sample to identify a model set M.
3. Identify train-sample anomalies θ1998 ∈ K. Please see Section ?? and Algorithm
2 for details.
4. Trained ML models are not retrained during test period i.e. no dynamic updating.

Stage 2: The machine-learning algorithm (MLA) training procedure
1. Using 1980-1998 data on all K=106 characteristics, the MLA estimates ET and
GBDT models with different parameter settings. For linear regression, the MLA
estimates an exhaustive pairwise combination of characteristics in θ1998.
2. For each month t in the train sample, the MLA computes each model’s R-value
to evaluate among the trained models.
3. Every month, the model with the highest R-value is shortlisted into model set M.

Stage 3: Generate ensemble forecast from stacking on θ1998
1. The MLA trains another decision tree to generate a probability distribution over
M, conditional on train-sample anomalies θ1998.
2. Models in M, for which one (or more) characteristic in θ1998 is important, receives
a larger probability weight.

Stage 4: Generate return predictions to form the ML portfolio
1. For each month t in the test sample, the MLA:
(a) Use each model in M to predict next month return rit+1 for each Firm i.
(b) Using the decision tree from Stage 3, compute the ensemble forecast ˆrit+1 as
the probability-weighted stock return forecast from models in M.
(c) Repeat on a monthly basis, until the end of the test period.
2. At each Month t, decile-sort firms on ˆrit+1 to form a long-short ML portfolio in
predicted winner (top-decile) and predicted loser (top-decile).
portfolioThe section of the paper “The Machine-Learning Portfolio Analysis” presents the main findings from a machine-learning (ML) portfolio analysis. The analysis focuses on three key issues:

1. Significance of αml against entrenched factor models: The researchers evaluate the ML portfolio against established factor models, including FF3, C4, FF5, and Q4.The ML portfolio consistently shows significant positive alpha (αml) across all 16 portfolio estimations. The magnitude of annualized αml ranges from 17% to 29%, and the t-stats range from 2.97 to 9.72. Both the long side (predicted winner portfolios) and short side (predicted loser portfolios) exhibit significant alpha at 95% significance, with a clear pattern of increasing alpha from the short to the long side.

2. Source of αml: The researchers explore the source(s) of significant αml. They consider the factor zoo, which represents the space of characteristic portfolios with correlated returns. The ML portfolio dynamically moves through this factor zoo, making it challenging for static factor models to explain its alpha. To identify potential sources of αml, the researchers construct a ML-mimicking portfolio (K1) using the Stambaugh and Yuan (2017) mispricing factor approach. While K1 tracks the ML portfolio’s movements, it is not sufficient to beat the ML portfolio, suggesting that the ML portfolio’s implied weights in dominant characteristics are informative and time-varying.

Dominant characteristics in the ML portfolio: The researchers analyze the dominant characteristics present in the ML portfolio over the test period. They find that the ML portfolio loads negatively on beta and size factors and positively on the market and size premium. The ML portfolio also shows positive loadings on value (HML) and profitability (RMW and CMA) factors, while loading negatively on momentum (MOM) in some cases. These loadings are highly significant and appear to be driven mainly by the predicted loser portfolio, indicating that the ML model can predict lower returns for firms with weak profitability and/or aggressive investment policies.

The ML portfolio analysis demonstrates that the ML approach generates a portfolio with pervasive significant alpha against entrenched factor models. The source of this alpha appears to be related to time-varying dominant characteristics in the ML portfolio, indicating that the ML model’s implied weights play a crucial role in its performance.

The authors discuss the analysis they conducted to understand the performance of the ML (Machine Learning) portfolio and its dominant characteristics during the out-of-sample test period. They compare the ML portfolio’s performance with two benchmark portfolios: K1 and K2. The K1 benchmark represents a combination of significant characteristics from the ML portfolio using the Stambaugh and Yuan (2017) approach. The K2 benchmark is a portfolio that cheats by using perfect foresight on the next-month spread returns of all characteristic portfolios.
They find that the ML portfolio outperforms K1, but K2 beats the ML portfolio due to its cheating nature. The R2 of the regression of the ML portfolio against K2 is substantially lower, and the loading on K2 is also smaller. The authors attribute the ML portfolio’s performance to its ability to shift among dominant characteristics over time.
They then explore potential sources of alpha in the ML portfolio and suggest that the rise and fall of certain characteristics are related to the credit cycle. During credit contractions, investors become more sensitive to trading-based characteristics, while during credit expansions, valuation-based characteristics become more relevant.
The authors discuss the implications of their findings, including the evaluation of portfolios formed using ML methods and the implications for investment style or tactical asset allocation. They suggest that the performance of the ML portfolio could be conditional on economic and market states, and it may be relevant to consider both trading and fundamental analysis in investment strategies.
Their analysis highlights the dynamic nature of the ML portfolio and the importance of considering economic conditions when evaluating its performance and dominant characteristics.

Hedge for stocks during bear markets
Not known - Not mentioned.